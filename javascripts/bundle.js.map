{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./javascripts/slider/utils.js","webpack:///./javascripts/slider/updaters/updateCanvas.js","webpack:///./javascripts/slider/updaters/updateSwatch.js","webpack:///./javascripts/slider/updaters/updateTrioDraggers.js","webpack:///./javascripts/slider/listeners/circleDraggerCallback.js","webpack:///./javascripts/slider/applyUpdates.js","webpack:///./javascripts/slider/updaters/updateDragger2.js","webpack:///./javascripts/slider/listeners/dragger2Callback.js","webpack:///./javascripts/slider/listeners/colorInputCallback.js","webpack:///./javascripts/slider/initializers/initializeSwatch.js","webpack:///./javascripts/slider/initializers/initializeCircleSlider.js","webpack:///./javascripts/slider/updaters/draggerCallback.js","webpack:///./javascripts/slider/initializers/initializeTrioSliders.js","webpack:///./javascripts/slider/slider.js","webpack:///./javascripts/slider/initialize.js","webpack:///./javascripts/slider/initializers/initializeCanvas.js","webpack:///./javascripts/slider/initializers/initializeDragger2.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","format","color","tag","parent","props","style","element","document","createElement","assign","append","calcColor","progress","inc","Math","floor","generateColor","canvas","getElementById","min","mid","max","Array","from","sort","x","y","theta","missingColor","parentColor","forEach","hue","push","theta0","PI","sqrt","innerWidth","cos","tan","innerHeight","triangleDragger","revCalc","colorTrio","red","green","blue","updateCanvas","ctx","getContext","clearRect","width","height","buffer","createImageData","populateBuffer","putImageData","padding","outline","triangleCoords","antiAliased","coordsCalculated","calculateCoords","top","xAvg","yAvg","atan","data","beginPath","fillStyle","arc","fill","b2w","createLinearGradient","addColorStop","rect","borderRadius","r2w","moveTo","lineTo","sin","r2b","updateSwatch","swatch","background","dragger2","R","G","B","sat","updateTrioDraggers","status","redDragger","greenDragger","blueDragger","left","diameter","redProgress","greenProgress","blueProgress","circleDraggerCallback","e","preventDefault","xPrev","yPrev","clientX","clientY","circlePip","body","classList","add","mousemove","magnitude2","circleDragger","tangent","scale","radius","spectrumContainer","circleSlider","thickness","abs","setDraggerPosition","addEventListener","removeEventListener","remove","once","updateDragger2","applyUpdates","xp","yp","round","pip","dragger2Callback","diffx","diffy","newx","newy","colorInputCallback","input","val","target","last","initializeSwatch","containerWidth","rightContainer","id","position","border-radius","box-shadow","inputContainer","redHolder","innerHTML","greenHolder","blueHolder","copyHolder","copyButton","defaultStyle","line-height","font-size","text","setAttribute","select","execCommand","initializeCircleSlider","canvasWidth","spectrumWidth","dragDiam","spectrumContainerOuter","container","z-index","right","bottom","margin","transition","outer","calcXsects","inner","initializeCircleSlider_populateBuffer","fillPixel","curve","innerRadius","rSquare","initializeCircleSlider_antiAlias","xsects","coord","collision","convex","keys","length","orientation","orient","initializeCircleSlider_setOpacity","initializeCircleSlider_n","number","opacity","some","el","draggerCallback","slider","redSlider","dragger","redPip","greenSlider","greenPip","blueSlider","bluePip","diff","newValue","initializeTrioSliders","sliderStyle","draggerStyle","cursor","pipStyle","trackStyle","offset","xCoords","map","console","log","triadContainer","display","triangleContainer","initializeCanvas","d2diameter","initializeDragger2","flex-direction","justify-content","align-items"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const format = color => `rgb(${color[0]},${color[1]},${color[2]})`;\n\nexport const create = (tag, parent, props, style) => {\n  const element = document.createElement(tag);\n  Object.assign(element, props);\n  parent.append(element);\n  if (style) Object.assign(element.style, style);\n  return element;\n};\n\nexport const calcColor = progress => {\n    let inc = 255 * (progress - Math.floor(progress));\n\n    switch (Math.floor(progress)){\n      case 0:\n        return [255, inc, 0]\n      case 1:\n        return [255-inc, 255, 0]\n      case 2:\n        return [0, 255, inc]\n      case 3:\n        return [0, 255-inc, 255]\n      case 4:\n        return [inc, 0, 255]\n      case 5:\n        return [255, 0, 255-inc]\n      case 6:\n        return [255, 0, 0]\n    }\n}\n\nexport const revCalc = color => {\n  let progress;\n\n  if (color[0] === 255 && color[2] === 0){\n    progress = 0 + color[1]/255;\n  }else if (color[1] === 255 && color[2] === 0){\n    progress = 1 + 1 - color[0]/255;\n  }else if (color[1] === 255 && color[0] === 0){\n    progress = 2 + color[2]/255;\n  }else if (color[2] === 255 && color[0] === 0){\n    progress = 3 + 1 - color[1]/255;\n  }else if (color[2] === 255 && color[1] === 0){\n    progress = 4 + color[0]/255;\n  }else if (color[0] === 255 && color[1] === 0){\n    progress = 5 + 1 - color[2]/255;\n  }\n  return progress;\n}\n\nexport const generateColor = color => {\n  const canvas = document.getElementById('canvas');\n\n  let [min,mid,max] = Array.from(color).sort((x,y)=> x-y);\n  const r = max / 255;\n  const theta = min / max;\n  const missingColor = 255 * (mid - min) / (max - min);\n\n  let parentColor = [];\n  if (max !== min){\n    color.forEach(hue =>{\n      switch (hue){\n        case max: parentColor.push(255); break;\n        case min: parentColor.push(0); break;\n        default: parentColor.push(missingColor); break;\n      }\n    });\n  } else {\n    parentColor = canvas.color\n  }\n\n  const theta0 = Math.PI/3 - (Math.PI/3 * theta);\n  let x = Math.sqrt(3) * max * canvas.innerWidth /2 /255 /Math.cos(Math.PI/6-theta0) /Math.sqrt(1+ Math.tan(theta0) * Math.tan(theta0));\n  let y = canvas.innerHeight - x * Math.tan(theta0);\n\n  if (max === 0){\n    x = 0;\n    y = canvas.innerHeight;\n  } else if (min === 255){\n    x = canvas.innerWidth;\n    y = canvas.innerHeight;\n  }\n\n  const progress = revCalc(parentColor)*Math.PI/3;\n  const triangleDragger = {x,y};\n  const colorTrio = {red: color[0]/255*200, green: color[1]/255*200, blue: color[2]/255*200};\n  return {triangleDragger, progress, colorTrio};\n\n};\n","import { format } from '../utils';\n\nexport const updateCanvas = color => {\n\n  const canvas = document.getElementById('canvas');\n  const ctx = canvas.getContext('2d');\n  ctx.clearRect(0,0,canvas.width,canvas.height);\n\n  canvas.color = color;\n\n  const buffer = ctx.createImageData(canvas.innerWidth, canvas.innerHeight);\n\n  populateBuffer(buffer);\n  ctx.putImageData(buffer, canvas.padding, canvas.padding);\n  outline(buffer);\n\n};\n\n\nconst XtoY = x => {\n  return x < 0 ?\n    Math.sqrt(3) * (canvas.innerWidth/2 + x) :\n    Math.sqrt(3) * (canvas.innerWidth/2 - x)\n}\n\nconst YtoX = y => {\n    return - y / Math.sqrt(3) + canvas.innerWidth/2\n}\n\n\nconst alii = {};\nconst triangleCoords = {};\n\nlet antiAliased = false;\nlet coordsCalculated = false;\n\n\n//TODO: cache theta & r for i to improve speed\nconst calculateCoords = i => {\n  const top = Math.floor(i / canvas.innerWidth);\n  const left = Math.floor(i % canvas.innerWidth);\n\n  const x = left;\n  const y = canvas.innerHeight - top -1;\n  //TODO -1 FOR pixel misalignment with rounded border\n\n  const xAvg = x + .5;\n  const yAvg = y - .5\n\n  let theta0 = Math.atan(yAvg/xAvg);\n  const theta = (Math.PI/3 - theta0)/(Math.PI/3);\n  //map radial coordinates [0, pi/3] -> [1, 0]\n\n  let r = Math.sqrt(xAvg*xAvg + yAvg*yAvg)/canvas.innerWidth;\n  r = r * Math.cos(Math.PI/6 - theta0) / (Math.sqrt(3)/2)\n  //map pie wedge to equilateral triangle by flattening arc\n  triangleCoords[i] = {x,y,theta,r};\n  return {x,y,theta,r};\n}\n\n\n\n//TODO TODO: just iterating thru buffer is causing lag.\n//possible to stop iterating through dead points?\n//possible also to set opacity on black and white but have a bg color set\n//to canvas.color? native algorithms may be faster.\n\nconst populateBuffer = (buffer) => {\n  const [red, green, blue] = canvas.color;\n\n  for (let i=0; i<(canvas.innerHeight * canvas.innerWidth); i++) {\n\n    let x,y,theta,r;\n    if (coordsCalculated){\n      ({x,y,theta,r} = triangleCoords[i])\n    }else{\n      ({x,y,theta,r} = calculateCoords(i))\n    }\n\n    buffer.data[i*4 + 0] =\n      (red + (255 - red) * theta) * r;\n    buffer.data[i*4 + 1] =\n      (green + (255 - green) * theta) * r;\n    buffer.data[i*4 + 2] =\n      (blue  + (255 - blue) * theta) * r;\n    if (!(theta < 0 || theta > 1 || r > 1)){\n      buffer.data[i*4 + 3] = 255;\n    }else{\n      buffer.data[i*4 + 3] = 0;\n    }\n\n    //TODO anti-aliasing turned off\n    // if (antiAliased){\n    //   if (n(alii[i])) buffer.data[i*4 + 3] = alii[i];\n    // } else {\n    //   antiAlias(x-canvas.innerWidth/2, y, buffer, i);\n    // }\n  }\n  antiAliased = true;\n  coordsCalculated = true;\n};\n\n\n\n\n\n//TODO run this only once, calculate all of the XY issues,\n//apply same antiAliasing @ i always\nconst antiAlias = (x, y, buffer, i) => {\n\n  const left = x;\n  const right = x + 1;\n  const top = y;\n  const bottom = y - 1;\n  const collision = {};\n\n  if (\n    left <= YtoX(top) && YtoX(top) <= right ||\n    left <= -YtoX(top) && -YtoX(top) <= right\n     ){\n    //top collision\n    collision.top = x > 0 ? YtoX(top)-left : -YtoX(top)-left;\n  }\n\n  if (\n    left <= YtoX(bottom) && YtoX(bottom) <= right ||\n    left <= -YtoX(bottom) && -YtoX(bottom) <= right\n  ){\n    //bottom collision\n    collision.bottom = x > 0 ? YtoX(bottom)-left : -YtoX(bottom)-left;\n  }\n\n  if (\n    bottom <= XtoY(left) && XtoY(left) <= top\n  ){\n    //left collision\n    collision.left = XtoY(left)-bottom;\n  }\n\n  if (\n    bottom <= XtoY(right) && XtoY(right) <= top\n  ){\n    //right collision\n    collision.right = XtoY(right)-bottom;\n  }\n\n  if (Object.keys(collision).length){\n    const orientation = x >= 0 ?\n      {x: 0, y: 0} : {x: 1, y: 0}\n    setOpacity(collision, orientation, buffer, i, true);\n  }\n};\n\n\nconst n = (number) => typeof(number) === 'number' ? true : false;\nconst setOpacity = ({left,right,top,bottom}, orientation, buffer, i, convex) => {\n  let opacity;\n\n  if (n(left) && n(right)){\n    opacity =\n      orientation.y === 0 ?\n        (left+right)/2 :\n        1 - (left+right)/2\n\n  } else if (n(top) && n(bottom)) {\n    opacity =\n       orientation.x === 0 ?\n         (top+bottom)/2 :\n         1 - (top+bottom)/2\n\n  } else if (n(bottom) && n(left)) {\n    opacity =\n       orientation.x === 0 && orientation.y === 0 ?\n          bottom * left / 2 :\n          1 - bottom * left / 2\n\n  } else if (n(bottom) && n(right)) {\n    opacity =\n       orientation.x === 1 && orientation.y === 0 ?\n          (1-bottom) * right / 2 :\n          1 - (1-bottom) * right /2\n\n  } else if (n(top) && n(left)) {\n    opacity =\n      orientation.x === 0 && orientation.y === 1 ?\n        top * (1-left) / 2 :\n        1 - top * (1-left) / 2\n\n  } else if (n(top) && n(right)) {\n    opacity =\n      orientation.x === 1 && orientation.y === 1 ?\n        (1-top)*(1-right)/2 :\n        1 - (1-top)*(1-right)/2\n\n  }\n\n  if ([left,right,top,bottom].some(el=>n(el))){\n    buffer.data[i*4 + 3] = convex ?\n      opacity * 255 :\n      (1-opacity) * 255;\n\n    alii[i] = buffer.data[i*4 + 3];\n  }\n\n\n}\n\n\n\n\n\n\n\n\n\n\nconst outline = () => {\n\n  const borderRadius = 5;\n  const ctx = canvas.getContext('2d');\n\n  ctx.beginPath();\n  ctx.fillStyle = format(canvas.color);\n  ctx.arc(canvas.width/2, canvas.padding, borderRadius, Math.PI, Math.PI*2);\n  ctx.fill();\n\n  ctx.beginPath();\n  ctx.fillStyle = 'black';\n  ctx.arc(canvas.padding, canvas.height - canvas.padding, borderRadius, Math.PI/3, Math.PI+Math.PI/3);\n  ctx.fill();\n\n  ctx.beginPath();\n  ctx.fillStyle = 'white';\n  ctx.arc(canvas.width - canvas.padding, canvas.height - canvas.padding, borderRadius, -Math.PI/3, Math.PI-Math.PI/3);\n  ctx.fill();\n\n\n  ctx.beginPath();\n  const b2w = ctx.createLinearGradient(\n    canvas.padding, 0,\n    canvas.padding + canvas.innerWidth, 0,\n  );\n  b2w.addColorStop(0,'black');\n  b2w.addColorStop(1,'white');\n  ctx.fillStyle = b2w;\n  ctx.rect(canvas.padding, canvas.height-canvas.padding-1, canvas.innerWidth, borderRadius + 1)\n  ctx.fill();\n\n\n\n  ctx.beginPath();\n  const r2w = ctx.createLinearGradient(\n    canvas.width/2, canvas.padding,\n    canvas.width - canvas.padding, canvas.height - canvas.padding,\n  );\n  r2w.addColorStop(1,'white');\n  r2w.addColorStop(0, format(canvas.color));\n  ctx.fillStyle = r2w;\n  ctx.moveTo(canvas.width/2, canvas.padding);\n  ctx.lineTo(canvas.width-canvas.padding, canvas.height-canvas.padding);\n  ctx.lineTo(canvas.width-canvas.padding + borderRadius*Math.cos(Math.PI/6), canvas.height-canvas.padding - borderRadius*Math.sin(Math.PI/6))\n  ctx.lineTo(canvas.width/2 + borderRadius*Math.cos(Math.PI/6), canvas.padding - borderRadius*Math.sin(Math.PI/6));\n  ctx.lineTo(canvas.width/2, canvas.padding);\n  ctx.fill();\n\n\n\n  ctx.beginPath();\n  const r2b = ctx.createLinearGradient(\n    canvas.width/2, canvas.padding,\n    canvas.padding, canvas.height - canvas.padding,\n  );\n  r2b.addColorStop(1,'black');\n  r2b.addColorStop(0, format(canvas.color));\n  ctx.fillStyle = r2b;\n  ctx.moveTo(canvas.width/2, canvas.padding);\n  ctx.lineTo(canvas.padding, canvas.height-canvas.padding);\n  ctx.lineTo(canvas.padding - borderRadius*Math.cos(Math.PI/6), canvas.height-canvas.padding - borderRadius*Math.sin(Math.PI/6))\n  ctx.lineTo(canvas.width/2 - borderRadius*Math.cos(Math.PI/6), canvas.padding - borderRadius*Math.sin(Math.PI/6));\n  ctx.lineTo(canvas.width/2, canvas.padding);\n  ctx.fill();\n}\n","import { format } from '../utils'\n\nexport const updateSwatch = () => {\n  const swatch = document.getElementById('swatch');\n  swatch.style.background = format(dragger2.color);\n  const [R,G,B] = dragger2.color;\n  const sat =\n    .2126 * R +\n    .7152 * G +\n    .0722 * B ;\n  swatch.style.color = (sat < 255/2 ? 'white' : 'black');\n   dragger2.color.forEach((hue,i)=>{\n     const input = document.getElementById(`color-${i}`);\n     input.value = hue;\n   });\n};\n","import { applyUpdates } from '../applyUpdates';\nimport { generateColor } from '../utils'\n\nexport const updateTrioDraggers = (colorTrio) => {\n  const status = {\n    red: redDragger.status,\n    green: greenDragger.status,\n    blue: blueDragger.status\n  };\n\n  Object.assign(status, colorTrio);\n\n    redDragger.status = status.red;\n    redDragger.style.left = redDragger.status - redDragger.diameter/2 + 5 + 'px'; //5 is trackStyle radius\n    redProgress.style.width = redDragger.status + 'px';\n\n    greenDragger.status = status.green;\n    greenDragger.style.left = greenDragger.status - greenDragger.diameter/2 + 5 + 'px';\n    greenProgress.style.width = greenDragger.status + 'px';\n\n    blueDragger.status = status.blue;\n    blueDragger.style.left = blueDragger.status - blueDragger.diameter/2 + 5 + 'px';\n    blueProgress.style.width = blueDragger.status + 'px';\n}\n","import { updateCanvas } from '../updaters/updateCanvas';\nimport { format, calcColor } from '../utils';\nimport { updateSwatch } from '../updaters/updateSwatch';\nimport { updateDragger2 } from '../updaters/updateDragger2';\nimport { updateTrioDraggers } from '../updaters/updateTrioDraggers'\n\n\nexport const circleDraggerCallback = e => {\n  e.preventDefault();\n  let [ xPrev, yPrev ] = [ e.clientX, e.clientY ];\n  circlePip.style.height = '35px';\n  circlePip.style.width = '35px';\n  circlePip.style['box-shadow'] = '0 8px 8px 0 rgba(0,0,0,.4)';\n  document.body.classList.add('grabbing');\n\n  const mousemove = e => {\n\n    const diffx = e.clientX - xPrev;\n    const diffy = e.clientY - yPrev;\n\n    const m = [diffx, -diffy];\n\n    const magnitude2 =\n      circleDragger.y*circleDragger.y + circleDragger.x*circleDragger.x;\n    const tangent = [-circleDragger.y, circleDragger.x];\n    const scale = (m[0]*tangent[0] + m[1]*tangent[1])/magnitude2;\n\n\n    let x, y;\n\n    const radius = (spectrumContainer.width/2 - circleSlider.thickness)/2 + spectrumContainer.width/4;\n    if (Math.abs(tangent[0]) > Math.abs(tangent[1])){\n      x = circleDragger.x + tangent[0]*scale;\n      if (circleDragger.y > circleDragger.x){\n        y = Math.sqrt(radius*radius - x * x);\n      } else {\n        y = -Math.sqrt(radius*radius - x * x);\n      }\n    }else{\n      y = circleDragger.y + tangent[1]*scale;\n      if (-Math.abs(circleDragger.y) < circleDragger.x){\n        x = Math.sqrt(radius*radius - y * y)\n      } else {\n        x = -Math.sqrt(radius*radius - y * y)\n      }\n    }\n\n\n    //fix fast-drag errors\n    if (Math.abs(x) > radius){\n      x = radius;\n      y = 0;\n    }\n    if (Math.abs(y) > radius){\n      y = radius;\n      x = 0;\n    }\n\n    setDraggerPosition({x, y});\n\n\n\n    xPrev = e.clientX;\n    yPrev = e.clientY;\n  }\n\n  document.addEventListener('mousemove', mousemove);\n  document.addEventListener('mouseup', ()=>{\n    document.removeEventListener('mousemove', mousemove);\n    document.body.classList.remove('grabbing')\n    circlePip.style.height = circlePip.diameter + 'px';\n    circlePip.style.width = circlePip.diameter + 'px';\n    circlePip.style['box-shadow'] = '0 2px 2px 0 rgba(0,0,0,.4)';\n  },{once: true})\n\n}\n\nexport const setDraggerPosition = ({ x, y }) => {\n  const left = (x + spectrumContainer.width/2) - circleDragger.diameter/2;\n  const top = (spectrumContainer.width/2 - y) - circleDragger.diameter/2;\n\n\n  let theta;\n  if (x < 0){\n    theta = Math.atan(y/x) + Math.PI/2;\n  } else {\n    theta = Math.atan(y/x) + 3/2 * Math.PI;\n  }\n\n  const progress = 3 * theta / Math.PI;\n  const color = calcColor(progress);\n  circleDragger.x = x;\n  circleDragger.y = y;\n  circleDragger.style.left = left + 'px';\n  circleDragger.style.top = top + 'px';\n  circlePip.style.background = format(color);\n\n  updateCanvas(calcColor(progress));\n  updateDragger2();\n  updateTrioDraggers({\n    red: dragger2.color[0]/255*200,\n    green: dragger2.color[1]/255*200,\n    blue: dragger2.color[2]/255*200\n  });\n  updateSwatch();\n}\n","import { format, calcColor,revCalc, generateColor } from './utils';\nimport { updateCanvas } from './updaters/updateCanvas';\nimport { updateDragger2 } from './updaters/updateDragger2';\nimport { updateSwatch } from './updaters/updateSwatch';\nimport { setDraggerPosition } from './listeners/circleDraggerCallback';\nimport { updateTrioDraggers } from './updaters/updateTrioDraggers';\n\n\nexport const applyUpdates = ({triangleDragger, progress, colorTrio}) => {\n\n  if (typeof(progress) !== 'undefined') {\n    const radius = (spectrumContainer.width/2 - circleSlider.thickness)/2 + spectrumContainer.width/4;\n    const x = Math.cos(progress + Math.PI/2) * radius;\n    const y = Math.sin(progress + Math.PI/2) * radius;\n    setDraggerPosition({x, y});\n  }\n\n  if (typeof(triangleDragger) !== 'undefined') {\n    dragger2.x = triangleDragger.x;\n    dragger2.style.left = dragger2.x - dragger2.diameter/2 + 'px';\n    dragger2.y = triangleDragger.y;\n    dragger2.style.top = dragger2.y - dragger2.diameter/2 + 'px';\n  }\n\n  if (typeof(colorTrio) !== 'undefined') {\n    const status = {\n      red: redDragger.status,\n      green: greenDragger.status,\n      blue: blueDragger.status\n    };\n\n    Object.assign(status, colorTrio);\n    const color = [status.red*255/200, status.green*255/200, status.blue*255/200];\n\n    let progress, triangleDragger;\n    ({progress, triangleDragger} = generateColor(color));\n    const radius = (spectrumContainer.width/2 - circleSlider.thickness)/2 + spectrumContainer.width/4;\n    const x = Math.cos(progress + Math.PI/2) * radius;\n    const y = Math.sin(progress + Math.PI/2) * radius;\n    setDraggerPosition({x, y});\n    dragger2.x = triangleDragger.x;\n    dragger2.style.left = dragger2.x - dragger2.diameter/2 + 'px';\n    dragger2.y = triangleDragger.y;\n    dragger2.style.top = dragger2.y - dragger2.diameter/2 + 'px';\n\n  }\n\nupdateDragger2();\nupdateSwatch();\nupdateTrioDraggers({\n  red: dragger2.color[0]/255*200,\n  green: dragger2.color[1]/255*200,\n  blue: dragger2.color[2]/255*200\n});\n\n}\n","import { format } from '../utils';\nimport { applyUpdates } from '../applyUpdates';\n\nexport const updateDragger2 = () => {\n\n    const xp = dragger2.x;\n    const yp = canvas.innerHeight - dragger2.y;\n\n    let theta0 = Math.atan(yp/xp);\n    const theta = (Math.PI/3 - theta0)/(Math.PI/3);\n\n    let r = Math.sqrt(xp*xp + yp*yp)/canvas.innerWidth;\n    r = r * Math.cos(Math.PI/6 - theta0) / (Math.sqrt(3)/2);\n\n    let R = Math.round((canvas.color[0] + (255-canvas.color[0])*theta) * r) || 0;\n    let G = Math.round((canvas.color[1] + (255-canvas.color[1])*theta) * r) || 0;\n    let B = Math.round((canvas.color[2] + (255-canvas.color[2])*theta) * r) || 0;\n\n    dragger2.color = [R,G,B];\n    pip.style.background = format([R,G,B]);\n}\n","import { applyUpdates } from '../applyUpdates';\n\nexport const dragger2Callback = e => {\n\n  e.preventDefault();\n  let xPrev = e.clientX;\n  let yPrev = e.clientY;\n\n  pip.style.width = '35px';\n  pip.style.height = '35px';\n  pip.style['box-shadow'] = '0 8px 8px 0 rgba(0,0,0,.4)';\n\n  document.body.classList.add('grabbing');\n  // pip.classList.remove('animate');  //TODO animate\n\n  const mousemove = e => {\n    const diffx = e.clientX - xPrev;\n    const diffy = e.clientY - yPrev;\n    const newx = dragger2.x + diffx;\n    const newy = dragger2.y + diffy;\n\n\n\n    let x, y;\n\n    if (-canvas.innerHeight*(2*newx/canvas.innerWidth - 1) > newy){\n      if (Math.abs(diffy/diffx) > Math.sqrt(3)){\n        y = newy;\n        x = canvas.innerWidth/2 * (1 - newy/canvas.innerHeight)\n      }else{\n        x = newx;\n        y = -canvas.innerHeight*(2*newx/canvas.innerWidth - 1);\n      }\n    }else if(canvas.innerHeight*(2*newx/canvas.innerWidth - 1) > newy){\n      if (Math.abs(diffy/diffx) > Math.sqrt(3)){\n        y = newy;\n        x = canvas.innerWidth/2 * (newy/canvas.innerHeight + 1)\n      }else{\n        x = newx;\n        y = canvas.innerHeight*(2*newx/canvas.innerWidth - 1);\n      }\n    }else{\n      x = newx;\n      y = newy;\n    }\n\n    //edge case clearance\n\n    if (y > canvas.innerHeight){\n      y = canvas.innerHeight;\n    }else if (y < 0){\n      y = 0;\n    }\n\n    if (x > canvas.innerWidth){\n      x = canvas.innerWidth;\n    } else if (x < 0){\n      x = 0;\n    }\n\n    if (newy < 0){\n      y = 0;\n      x = canvas.innerWidth/2;\n    }\n\n    xPrev = e.clientX;\n    yPrev = e.clientY;\n\n    const triangleDragger = {x,y};\n    applyUpdates({triangleDragger})\n  };\n\n  document.addEventListener('mousemove', mousemove);\n\n  document.addEventListener('mouseup',()=>{\n      document.removeEventListener('mousemove', mousemove);\n      document.body.classList.remove('grabbing');\n      pip.style.width = pip.diameter + 'px';\n      pip.style.height = pip.diameter + 'px';\n      pip.style['box-shadow'] = '0 2px 2px 0 rgba(0,0,0,.4)';\n    },{\n      once:true\n    }\n  );\n\n}\n","import { format, calcColor, revCalc, generateColor } from '../utils';\nimport { applyUpdates } from '../applyUpdates';\n\nexport const colorInputCallback = e => {\n    const color = [];\n    for (let i = 0; i < 3; i++) {\n      const input = document.getElementById(`color-${i}`);\n      let val = +input.value;\n      if (input === e.target && !(val >= 0 && val <= 255)){\n        input.value = input.last;\n        return;\n      };\n      color.push(val);\n      input.last = val;\n    }\n    applyUpdates(generateColor(color))\n  };\n","import { format, create } from '../utils';\nimport { colorInputCallback } from '../listeners/colorInputCallback';\n\n\nexport const initializeSwatch = (containerWidth) => {\n  const swatch =\n    create('DIV', rightContainer, {\n      id: 'swatch'\n    },{\n      position: 'relative',\n      background: format(canvas.color),\n      height: containerWidth + 'px',\n      width: containerWidth + 'px',\n      'border-radius': '50%',\n      'box-shadow': '0 2px 2px 0 rgba(0,0,0,.4)',\n      top: '20px'\n    });\n\n    const red = document.createElement('INPUT');\n    red.id = 'color-0';\n    red.last = 255;\n    //these are the saved previous inputs in case of invalid user input\n    const green = document.createElement('INPUT');\n    green.last = 0;\n    green.id = 'color-1';\n    const blue = document.createElement('INPUT');\n    blue.last = 0;\n    blue.id = 'color-2';\n\n    [red,green,blue].forEach(input => {\n      input.addEventListener('input',colorInputCallback);\n      //input.addEventListener('focus',e=>e.target.select());\n    })\n\n    const inputContainer = create('DIV', swatch, {\n        id: 'inputContainer'\n      });\n\n    const redHolder = create('DIV', inputContainer);\n    redHolder.classList.add('vertical-center');\n    create('SPAN', redHolder,{innerHTML:'R'});\n    redHolder.append(red);\n\n    const greenHolder = create('DIV', inputContainer);\n    greenHolder.classList.add('vertical-center');\n    create('SPAN', greenHolder,{innerHTML:'G'});\n    greenHolder.append(green);\n\n    const blueHolder = create('DIV', inputContainer);\n    blueHolder.classList.add('vertical-center');\n    create('SPAN', blueHolder,{innerHTML:'B'});\n    blueHolder.append(blue);\n\n    const copyHolder = create('DIV', swatch,{},{\n      height: '35px',\n      width: '35px',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n    })\n    const copyButton = create('DIV', copyHolder, {\n      id: 'copyButton',\n      innerHTML: '<i class=\"fas fa-copy\"></i>'\n    })\n\n    //hacky solution, but display:none and visibility:hidden\n    //prevent selection of text.\n    copyButton.addEventListener('mousedown',()=>{\n      const defaultStyle = Object.assign({},copyButton.style);\n      const MDStyle = {\n        height: '33px',\n        width: '33px',\n        'line-height': '33px',\n        'font-size': '15px',\n        'box-shadow': 'none',\n      }\n      Object.assign(copyButton.style, MDStyle);\n      const text = document.createElement('TEXTAREA');\n      text.value = pip.style.background;\n      text.setAttribute('readonly','');\n      text.style = {position: 'absolute', left: '-9999px'};\n      document.body.append(text);\n      text.select();\n      document.execCommand('copy');\n      text.remove();\n      document.addEventListener('mouseup',()=>{\n        copyButton.style = defaultStyle;\n      },{once:true})\n    });\n\n\n\n}\n","import { create, calcColor } from '../utils';\nimport { circleDraggerCallback } from '../listeners/circleDraggerCallback';\n\n\n\nexport const initializeCircleSlider = (canvasWidth, spectrumWidth, dragDiam) => {\n\n  const spectrumContainerOuter = create('DIV', container,{\n    id: 'spectrumContainerOuter',\n    width: canvasWidth\n  },{\n    background: 'linear-gradient(140deg,#333,black)',\n    padding: '20px', //TODO variable\n    'border-radius': '50%',\n    height: canvasWidth + 'px',\n    width: canvasWidth + 'px',\n    position: 'relative',\n    'box-shadow': '0 2px 2px 0 rgba(0,0,0,.4)'\n    //border: '3px solid black',\n  })\n\n\n  const spectrumContainer = create('DIV', spectrumContainerOuter,{\n    id: 'spectrumContainer',\n    width: canvasWidth\n  },{\n    height: canvasWidth + 'px',\n    width: canvasWidth + 'px',\n    position: 'relative',\n  })\n\n  const circleSlider = create('CANVAS', spectrumContainer, {\n    id: 'circleSlider',\n    height: canvasWidth,\n    width: canvasWidth,\n    thickness: spectrumWidth,\n  });\n\n  const circleDragger = create('DIV', spectrumContainer, {\n    id: 'circleDragger',\n    diameter: dragDiam,\n    x: 0,\n    y: canvasWidth/2\n  },{\n    height: dragDiam + 'px',\n    width: dragDiam + 'px',\n    'border-radius': '50%',\n    position: 'absolute',\n    top: (spectrumWidth - dragDiam)/2 + 'px',\n    left: (canvasWidth - dragDiam)/2 + 'px',\n    'z-index': 3\n  })\n\n  const diameter = 20;\n  const circlePip = create('DIV', circleDragger, {\n    id: 'circlePip',\n    diameter\n  },{\n    height: diameter + 'px', //TODO variables!\n    width: diameter + 'px',\n    'border-radius': '50%',\n    background: 'rgb(255,0,0)',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    margin: 'auto',\n    transition: 'width .3s, height .3s, box-shadow .3s'\n  })\n  circleDragger.addEventListener('mousedown', circleDraggerCallback);\n\n\n  const ctx2 = circleSlider.getContext('2d');\n\n  const buffer = ctx2.createImageData(canvasWidth, canvasWidth);\n  const outer = calcXsects(circleSlider.width/2);\n  const inner = calcXsects(circleSlider.width/2 - spectrumWidth);\n  populateBuffer(buffer, {outer, inner});\n}\n\n\n\nconst fillPixel = (buffer, i, color) => {\n  buffer.data[i*4 + 0] = color[0];\n  buffer.data[i*4 + 1] = color[1];\n  buffer.data[i*4 + 2] = color[2];\n};\n\n\nconst populateBuffer = (buffer, curve) => {\n  const innerRadius = circleSlider.width/2 - circleSlider.thickness;\n\n  for (let i = 0; i < circleSlider.width * circleSlider.width; i++){\n\n    let left = i % circleSlider.width;\n    const x = left - circleSlider.width/2;\n    const xAvg = x + .5;\n\n    let bottom = circleSlider.width - Math.floor(i / circleSlider.width);\n    const y = bottom - circleSlider.width/2;\n    const yAvg = y - .5;\n\n    if (x === 0 && y === 0) continue;\n\n    let progress=0;\n    if (x < 0){\n      progress = (Math.atan(y/x) / Math.PI * 2 + 1)/2 * 3;\n    } else {\n      progress = (Math.atan(y/x) / Math.PI * 2 + 1)/2 * 3 + 3;\n    }\n\n    const color = calcColor(progress);\n\n    fillPixel(buffer,i,color);\n    const rSquare = xAvg*xAvg + yAvg*yAvg;\n    if ( rSquare <= circleSlider.width*circleSlider.width/4 && rSquare >= innerRadius* innerRadius){\n      buffer.data[i*4 + 3] = 255;\n    }\n\n    antiAlias(x, y, curve.outer, buffer, i, true);\n    antiAlias(x, y, curve.inner, buffer, i, false);\n\n  }\n\n  const ctx = circleSlider.getContext('2d');\n  ctx.putImageData(buffer,0,0);\n}\n\n\n\n\n\n//TODO find boundary. if x < 0 find error. if x > 0 find error next time.\n//TODO find negative boundary. figure out where to place.\n\nconst calcXsects = (radius) => {\n  const xsects = {};\n  for (let i=0; i<circleSlider.width+1; i++){\n    let coord = i - circleSlider.width/2;\n    let collision = Math.sqrt(radius*radius - coord * coord);\n    xsects[coord] = collision;\n  }\n  return xsects;\n}\n\nconst orient = (x, y) => {\n  let orientation = {};\n  orientation.x = x >= 0 ? 0 : 1;\n  orientation.y = y > 0 ? 0 : 1;\n  return orientation;\n}\n\nconst antiAlias = (x, y, curve, buffer, i, convex) => {\n\n  const left = x;\n  const right = x + 1;\n  const bottom = y - 1;\n  const top = y;\n  const collision = {};\n\n  if (\n    left <= curve[top] && curve[top] <= right ||\n    left <= -curve[top] && -curve[top] <= right\n     ){\n    //top collision\n    collision.top = x > 0 ? curve[top]-left : -curve[top]-left;\n  }\n\n  if (\n    left <= curve[bottom] && curve[bottom] <= right ||\n    left <= -curve[bottom] && -curve[bottom] <= right\n  ){\n    //bottom collision\n    collision.bottom = x > 0 ? curve[bottom]-left : -curve[bottom]-left;\n  }\n\n  if (\n    bottom <= curve[left] && curve[left] <= top ||\n    bottom <= -curve[left] && -curve[left] <= top\n  ){\n    //left collision\n    collision.left = y > 0 ? curve[left]-bottom : -curve[left]-bottom;\n  }\n\n  if (\n    bottom <= curve[right] && curve[right] <= top ||\n     bottom <= -curve[right] && -curve[right] <= top\n  ){\n    //right collision\n    collision.right = y > 0 ? curve[right]-bottom : -curve[right]-bottom;\n  }\n\n if (Object.keys(collision).length) {\n   const orientation = orient(x,y);\n   setOpacity(collision, orientation, buffer, i, convex);\n }\n}\n\n\nconst n = (number) => typeof(number) === 'number' ? true : false;\nconst setOpacity = ({left,right,top,bottom}, orientation, buffer, i, convex) => {\n  let opacity;\n\n  if (n(left) && n(right)){\n    opacity =\n      orientation.y === 0 ?\n        (left+right)/2 :\n        1 - (left+right)/2\n\n  } else if (n(top) && n(bottom)) {\n    opacity =\n       orientation.x === 0 ?\n         (top+bottom)/2 :\n         1 - (top+bottom)/2\n\n  } else if (n(bottom) && n(left)) {\n    opacity =\n       orientation.x === 0 && orientation.y === 0 ?\n          bottom * left / 2 :\n          1 - bottom * left / 2\n        //TODO top discont @ x = 0\n\n  } else if (n(bottom) && n(right)) {\n    opacity =\n       orientation.x === 1 && orientation.y === 0 ?\n          (1-bottom) * right / 2 :\n          1 - (1-bottom) * right /2\n\n  } else if (n(top) && n(left)) {\n    opacity =\n      orientation.x === 0 && orientation.y === 1 ?\n        top * (1-left) / 2 :\n        1 - top * (1-left) / 2\n      //TODO bottom discont @ x = 0\n\n  } else if (n(top) && n(right)) {\n    opacity =\n      orientation.x === 1 && orientation.y === 1 ?\n        (1-top)*(1-right)/2 :\n        1 - (1-top)*(1-right)/2\n\n  }\n\n  if ([left,right,top,bottom].some(el=>n(el))){\n    buffer.data[i*4 + 3] = convex ?\n      opacity * 255 :\n      (1-opacity) * 255\n  }\n\n}\n","import { applyUpdates } from '../applyUpdates'\n\n\n// export const draggerCallback = e => {\n//   e.preventDefault();\n//   let y = e.clientY;\n//\n//   const mousemove = e => {\n//\n//     const diff = e.clientY - y;\n//     const newValue = dragger.status + diff;\n//\n//     if (newValue > slider.height){\n//       status = slider.height;\n//     } else if (newValue < 0) {\n//       status = 0;\n//     } else {\n//       status = newValue;\n//       y = e.clientY;\n//     }\n//\n//     applyUpdates({status});\n//   };\n//\n//   const mouseup = e => {\n//     document.removeEventListener('mousemove', mousemove);\n//   };\n//\n//   document.addEventListener('mousemove', mousemove);\n//   document.addEventListener('mouseup', mouseup, {once: true});\n//\n// }\n\n\n\nexport const draggerCallback = color => e => {\n  e.preventDefault();\n  let x = e.clientX;\n\n  const data = {\n    red: {\n      slider: redSlider,\n      dragger: redDragger,\n      pip: redPip,\n      key: 'red'\n    },\n    green: {\n      slider: greenSlider,\n      dragger: greenDragger,\n      pip: greenPip,\n      key: 'green'\n    },\n    blue: {\n      slider: blueSlider,\n      dragger: blueDragger,\n      pip: bluePip,\n      key: 'blue',\n    }\n  }\n\n  data[color].pip.style.height = '35px';\n  data[color].pip.style.width = '35px';\n  data[color].pip.style['box-shadow'] = '0 8px 8px 0 rgba(0,0,0,.4)';\n  document.body.classList.add('grabbing')\n\n  const mousemove = e => {\n\n    const colorTrio = {};\n\n    const diff = e.clientX - x;\n    const newValue = data[color].dragger.status + diff;\n\n    if (newValue > 200){ //TODO these will all be the same, factor out\n      colorTrio[data[color].key] = 200;\n    } else if (newValue < 0) {\n      colorTrio[data[color].key] = 0;\n    } else {\n      colorTrio[data[color].key] = newValue;\n      x = e.clientX;\n    }\n\n    applyUpdates({colorTrio})\n\n  };\n\n  const mouseup = e => {\n    document.removeEventListener('mousemove', mousemove);\n    data[color].pip.style.height = '20px';\n    data[color].pip.style.width = '20px';\n    data[color].pip.style['box-shadow'] = '0 2px 2px 0 rgba(0,0,0,.4)';\n    document.body.classList.remove('grabbing')\n\n  };\n\n  document.addEventListener('mousemove', mousemove);\n  document.addEventListener('mouseup', mouseup, {once: true});\n\n}\n","import { create } from '../utils';\nimport { draggerCallback } from '../updaters/draggerCallback'\n\nexport const initializeTrioSliders = () => {\n\n  const sliderStyle = {\n      height: '10px',\n      width: '200px',\n      margin: '20px 0',\n      position: 'relative',\n  };\n\n  const draggerStyle = {\n    height: '50px',\n    width: '50px',\n    'border-radius': '50%',\n    left: -25 + 5 + 'px', // 5 is radius of trackStyle\n    top: (10-50)/2 + 'px',\n    position: 'absolute',\n    cursor: 'url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur), default'\n  };\n\n  const pipStyle = color => {\n    return {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      'border-radius': '50%',\n      margin: 'auto',\n      height: '20px',\n      width: '20px',\n      background: color,\n      'z-index': 2,\n      transition: 'height .3s, width .3s, box-shadow .3s',\n      'box-shadow': '0 2px 2px 0 rgba(0,0,0,.4)'\n    }\n  };\n\n  const trackStyle = {\n    background: '#000',\n    height: '100%',\n    width: '209px',\n    position: 'absolute',\n    top: 0,\n    left: '1px',\n    'border-radius': '5px',\n    'box-shadow': '0 2px 2px 0 rgba(0,0,0,.4)'\n  }\n\n\n  const offset = 10\n  const radius = offset + 20 + spectrumContainer.width/2;\n\n  //(distance from circle) + (margin between sliders)*n + sliderHeight/2\n  const heights = [\n    offset + 25,\n    offset + 55,\n    offset + 85\n  ]\n  let xCoords = heights.map(y => Math.sqrt(radius*radius - (radius-y)*(radius-y)));\n  xCoords = xCoords.map(el => 0) //el - xCoords[1]-40);\n  console.log(xCoords);\n\n\n\n\n\n  const triadContainer = create('DIV',rightContainer,{\n    id: 'triadContainer'\n  },{\n    width: '210px'\n  });\n\n  const redSlider =\n    create('DIV', triadContainer,{\n      id: 'redSlider',\n      width: 200,\n    }, sliderStyle)\n  redSlider.style.left = xCoords[2] + 'px';\n\n  create('DIV', redSlider,{},trackStyle)\n\n  const redDragger =\n    create('DIV', redSlider,{\n      id: 'redDragger',\n      diameter: 50,\n      status: 200\n    },draggerStyle)\n  redDragger.style.left = 200 - 25 + 5 + 'px' //5 is trackStyle radius\n\n\n  const redPip =\n    create('DIV', redDragger,{\n      id: 'redPip'\n    },pipStyle('red'))\n  redPip.addEventListener('mousedown', draggerCallback('red'));\n\n  const redProgress =\n    create ('DIV', redSlider,{\n      id: 'redProgress'\n    },{\n      height: '10px',\n      width: '200px',\n      background: 'linear-gradient(to left, #f00, #f55 200px)',\n      position:'absolute',\n      top: 0,\n      left: 0,\n      'border-radius': '5px'\n    })\n\n\n\n  const greenSlider =\n    create('DIV', triadContainer,{\n      id: 'greenSlider',\n      width: 200,\n    },sliderStyle)\n  greenSlider.style.left = xCoords[1] + 'px';\n\n    create('DIV', greenSlider,{},trackStyle)\n\n  const greenDragger =\n    create('DIV', greenSlider,{\n      id: 'greenDragger',\n      diameter: 50,\n      status: 0\n    },draggerStyle)\n\n\n  const greenPip =\n    create('DIV', greenDragger,{\n      id: 'greenPip'\n    },pipStyle('lime'));\n  greenPip.addEventListener('mousedown', draggerCallback('green'));\n\n  const greenProgress =\n    create ('DIV', greenSlider,{\n      id: 'greenProgress'\n    },{\n      height: '10px',\n      width: 0,\n      background: 'linear-gradient(to left,#0f0, #7f7 200px)',\n      position:'absolute',\n      top: 0,\n      left: 0,\n      'border-radius': '5px'\n    })\n\n\n\n\n  const blueSlider =\n    create('DIV', triadContainer,{\n      id: 'blueSlider',\n      width: 200,\n    },sliderStyle)\n  blueSlider.style.left = xCoords[0] + 'px';\n\n    create('DIV', blueSlider,{},trackStyle)\n\n  const blueDragger =\n    create('DIV', blueSlider,{\n      id: 'blueDragger',\n      diameter: 50,\n      status: 0\n    },draggerStyle)\n\n\n  const bluePip =\n    create('DIV', blueDragger,{\n      id: 'bluePip'\n    },pipStyle('blue'));\n  bluePip.addEventListener('mousedown', draggerCallback('blue'));\n\n  const blueProgress =\n    create ('DIV', blueSlider,{\n      id: 'blueProgress'\n    },{\n      height: '10px',\n      width: 0,\n      background: 'linear-gradient(to left,#00f, #44f 200px)',\n      position:'absolute',\n      top: 0,\n      left: 0,\n      'border-radius': '5px'\n    })\n\n    //TODO TODO TODO trioSliders look asymmetrical because when at 0/255, they need\n    //to be centered on the border radius of the track. track is 10px, so radius\n    //is 5px. Need to shift draggers over 5px and add 10 px to the trackStyle width.\n    //make sure this propagates to setters and initializers.\n}\n","import { initialize } from './initialize'\n\n\n\n\n//const grab = 'url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur), default';\n//const grabbing = 'url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/closedhand.cur), default';\n\n\ndocument.addEventListener('DOMContentLoaded', initialize);\n","import { updateCanvas } from './updaters/updateCanvas';\nimport { updateDragger2 } from './updaters/updateDragger2';\nimport { updateSwatch } from './updaters/updateSwatch';\n\nimport { format, calcColor, create } from './utils'\n\nimport { dragger2Callback } from './listeners/dragger2Callback';\n\nimport { initializeSwatch } from './initializers/initializeSwatch';\nimport { initializeDragger2 } from './initializers/initializeDragger2';\nimport { initializeCanvas } from './initializers/initializeCanvas';\n\n\nimport { initializeCircleSlider } from './initializers/initializeCircleSlider';\nimport { initializeTrioSliders } from './initializers/initializeTrioSliders'\n\n\n\n\nexport const initialize = () => {\n\n  const d2diameter = 50; //NOTE can be arbitrarily large, until it blocks other elements\n  const sliderWidth = 10;\n  const canvasWidth = 150;\n  const sliderHeight = Math.round(canvasWidth*Math.sqrt(3)/2);\n\n  const circleSliderWidth = 250;\n  const circleSliderThickness = 10;\n  const circleSliderDragger = 50; //NOTE can be arbitrarily large\n\n\n  document.body.style.cursor = 'default';\n\n  const container =\n    create('DIV',document.body,{id: 'container'},{display: 'flex',height: '290px'});\n\n  initializeCircleSlider(\n    circleSliderWidth,\n    circleSliderThickness,\n    circleSliderDragger); //TODO fails on odd numbered widths\n  initializeCanvas(canvasWidth);\n  initializeDragger2(d2diameter);\n\n  const rightContainer =\n    create('DIV',container,{id: 'rightContainer'},{\n      height: '100%',\n      display: 'flex',\n      'flex-direction': 'column',\n      'justify-content': 'space-between',\n      'align-items': 'center'});\n  initializeSwatch(170); //TODO variable\n  initializeTrioSliders();\n\n\n\n\n\n  updateDragger2();\n  updateSwatch();\n}\n","import { create } from '../utils';\nimport { updateCanvas } from '../updaters/updateCanvas';\n\nexport const initializeCanvas = (canvasWidth) => {\n\n  const padding = 20;\n  const height = Math.round(canvasWidth*Math.sqrt(3)/2);\n\n  const triangleContainer = create('DIV',spectrumContainer, {\n    id: 'triangleContainer'\n  },{\n    height: Math.round(canvasWidth*Math.sqrt(3)/2),\n    width: canvasWidth,\n    position: 'absolute',\n    top: circleSlider.height/2 - height + canvasWidth/(2*Math.sqrt(3)) + 'px',\n    left: (circleSlider.width - canvasWidth)/2 + 'px',\n  });\n\n  const canvas = create('CANVAS', triangleContainer, {\n    id: 'canvas',\n    height: Math.round(canvasWidth*Math.sqrt(3)/2)+padding*2,\n    width: canvasWidth+padding*2,\n    innerHeight: Math.round((canvasWidth)*Math.sqrt(3)/2),\n    innerWidth: canvasWidth,\n    padding\n  },{\n    //background: 'white',\n    position: 'absolute',\n    left: -padding + 'px',\n    top: -padding+ 'px'\n  });\n\n\n  updateCanvas([255, 0, 0, 255]);\n  const ctx = canvas.getContext('2d');\n}\n","import { create } from '../utils';\nimport { dragger2Callback } from '../listeners/dragger2Callback';\n\n\nexport const initializeDragger2 = (d2diameter) => {\n  const dragger2 =\n    create('DIV', triangleContainer, {\n      id: 'dragger2',\n      diameter: d2diameter,\n      x: canvas.innerWidth/2,\n      y: 0,\n    },{\n      height: d2diameter + 'px',\n      width: d2diameter + 'px',\n      borderRadius: '50%',\n      left: (canvas.innerWidth - d2diameter)/2 + 'px',\n      top: -d2diameter/2 + 'px'\n    });\n\n\n\n  const diameter = 20;\n  const pip =\n  create('DIV', dragger2, {\n      id: 'pip',\n      diameter\n    },{\n      display: 'flex',\n      background: 'black',\n      height: diameter + 'px',\n      width: diameter + 'px',\n      'z-index': 2,\n      'border-radius': '50%',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      margin: 'auto',\n      transition: 'height .3s , width .3s, transform .3s, box-shadow .3s'\n    });\n  pip.addEventListener('mousedown', dragger2Callback);\n\n\n  // const border = '1px solid black'\n  // create('DIV', pip,{\n  //   id: 'crosshair1'\n  // },{\n  //   position: 'absolute',\n  //   'border-left': border,\n  //   height: '6px',\n  //   width: '1px',\n  //   left: '50%',\n  //   bottom: '-6px',\n  // })\n  //\n  // create('DIV', pip,{\n  //   id: 'crosshair2'\n  // },{\n  //   position: 'absolute',\n  //   'border-left': border,\n  //   height: '6px',\n  //   width: '1px',\n  //   left: '50%',\n  //   top: '-6px'\n  // })\n  //\n  // create('DIV', pip,{\n  //   id: 'crosshair3'\n  // },{\n  //   position: 'absolute',\n  //   'border-top': border,\n  //   height: '1px',\n  //   width: '6px',\n  //   top: '50%',\n  //   left: '-6px'\n  // })\n  //\n  // create('DIV', pip,{\n  //   id: 'crosshair4'\n  // },{\n  //   position: 'absolute',\n  //   'border-top': border,\n  //   height: '1px',\n  //   width: '6px',\n  //   top: '50%',\n  //   right: '-6px',\n  // })\n\n\n  ///////TODO animate\n  // const check = () => {\n  //     if (!pip.active){\n  //     pip.classList.remove('animate');\n  //     clearInterval(pip.run);\n  //   }\n  // }\n  //\n  // triangleContainer.addEventListener('mouseenter',()=>{\n  //   pip.active = true;\n  //   pip.classList.add('animate');\n  //   pip.run = setInterval(check,1000);\n  // })\n  //\n  // triangleContainer.addEventListener('mouseleave',()=>{\n  //   pip.active = false;\n  // })\n  ////////////\n\n};\n"],"sourceRoot":""}